[{"name":"constructor(value: T, children: List<TreeNode<T>> = emptyList())","description":"xyz.malefic.compose.ext.standard.tree.TreeNode.TreeNode","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.tree/-tree-node/-tree-node.html","searchKeys":["TreeNode","constructor(value: T, children: List<TreeNode<T>> = emptyList())","xyz.malefic.compose.ext.standard.tree.TreeNode.TreeNode"]},{"name":"data class TreeNode<T>(val value: T, val children: List<TreeNode<T>> = emptyList())","description":"xyz.malefic.compose.ext.standard.tree.TreeNode","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.tree/-tree-node/index.html","searchKeys":["TreeNode","data class TreeNode<T>(val value: T, val children: List<TreeNode<T>> = emptyList())","xyz.malefic.compose.ext.standard.tree.TreeNode"]},{"name":"fun <T> LazyListScope.gridItems(data: List<T>, columnCount: Int, modifier: Modifier, horizontalArrangement: Arrangement.Horizontal = Arrangement.Start, itemContent: BoxScope.(T) -> Unit)","description":"xyz.malefic.compose.ext.composables.gridItems","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/grid-items.html","searchKeys":["gridItems","fun <T> LazyListScope.gridItems(data: List<T>, columnCount: Int, modifier: Modifier, horizontalArrangement: Arrangement.Horizontal = Arrangement.Start, itemContent: BoxScope.(T) -> Unit)","xyz.malefic.compose.ext.composables.gridItems"]},{"name":"fun Any.grass(string: String): InputStream?","description":"xyz.malefic.compose.ext.standard.inputstream.grass","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.inputstream/grass.html","searchKeys":["grass","fun Any.grass(string: String): InputStream?","xyz.malefic.compose.ext.standard.inputstream.grass"]},{"name":"fun File.buildFileTree(): TreeNode<File>","description":"xyz.malefic.compose.ext.standard.file.buildFileTree","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.file/build-file-tree.html","searchKeys":["buildFileTree","fun File.buildFileTree(): TreeNode<File>","xyz.malefic.compose.ext.standard.file.buildFileTree"]},{"name":"fun File.loadFileContent(onContentLoaded: (String) -> Unit): Job","description":"xyz.malefic.compose.ext.standard.file.loadFileContent","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.file/load-file-content.html","searchKeys":["loadFileContent","fun File.loadFileContent(onContentLoaded: (String) -> Unit): Job","xyz.malefic.compose.ext.standard.file.loadFileContent"]},{"name":"fun File.saveFile(content: String): Job","description":"xyz.malefic.compose.ext.standard.file.saveFile","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.file/save-file.html","searchKeys":["saveFile","fun File.saveFile(content: String): Job","xyz.malefic.compose.ext.standard.file.saveFile"]},{"name":"fun Modifier.animateVisibility(isVisible: Boolean): Modifier","description":"xyz.malefic.compose.ext.composables.animateVisibility","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/animate-visibility.html","searchKeys":["animateVisibility","fun Modifier.animateVisibility(isVisible: Boolean): Modifier","xyz.malefic.compose.ext.composables.animateVisibility"]},{"name":"fun Modifier.clickableIf(condition: Boolean, enabled: Boolean = true, onClickLabel: String? = null, role: Role? = null, onClick: () -> Unit): Modifier","description":"xyz.malefic.compose.ext.composables.clickableIf","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/clickable-if.html","searchKeys":["clickableIf","fun Modifier.clickableIf(condition: Boolean, enabled: Boolean = true, onClickLabel: String? = null, role: Role? = null, onClick: () -> Unit): Modifier","xyz.malefic.compose.ext.composables.clickableIf"]},{"name":"fun Modifier.modifyIf(condition: Boolean, modifier: Modifier): Modifier","description":"xyz.malefic.compose.ext.composables.modifyIf","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/modify-if.html","searchKeys":["modifyIf","fun Modifier.modifyIf(condition: Boolean, modifier: Modifier): Modifier","xyz.malefic.compose.ext.composables.modifyIf"]},{"name":"fun Modifier.modifyIfElse(condition: Boolean, modifier: Modifier, alternateModifier: Modifier): Modifier","description":"xyz.malefic.compose.ext.composables.modifyIfElse","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/modify-if-else.html","searchKeys":["modifyIfElse","fun Modifier.modifyIfElse(condition: Boolean, modifier: Modifier, alternateModifier: Modifier): Modifier","xyz.malefic.compose.ext.composables.modifyIfElse"]},{"name":"fun Modifier.roundedBackgroundWithPadding(backgroundColor: Color, cornerRadius: Dp, padding: Dp): Modifier","description":"xyz.malefic.compose.ext.composables.roundedBackgroundWithPadding","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/rounded-background-with-padding.html","searchKeys":["roundedBackgroundWithPadding","fun Modifier.roundedBackgroundWithPadding(backgroundColor: Color, cornerRadius: Dp, padding: Dp): Modifier","xyz.malefic.compose.ext.composables.roundedBackgroundWithPadding"]},{"name":"fun Modifier.showIf(condition: Boolean): Modifier","description":"xyz.malefic.compose.ext.composables.showIf","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/show-if.html","searchKeys":["showIf","fun Modifier.showIf(condition: Boolean): Modifier","xyz.malefic.compose.ext.composables.showIf"]},{"name":"fun String.containsAny(vararg substrings: String): Boolean","description":"xyz.malefic.compose.ext.standard.string.containsAny","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.string/contains-any.html","searchKeys":["containsAny","fun String.containsAny(vararg substrings: String): Boolean","xyz.malefic.compose.ext.standard.string.containsAny"]},{"name":"fun String.either(first: String, second: String): String","description":"xyz.malefic.compose.ext.standard.string.either","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.string/either.html","searchKeys":["either","fun String.either(first: String, second: String): String","xyz.malefic.compose.ext.standard.string.either"]},{"name":"fun String.fromHex(): String","description":"xyz.malefic.compose.ext.standard.string.fromHex","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.string/from-hex.html","searchKeys":["fromHex","fun String.fromHex(): String","xyz.malefic.compose.ext.standard.string.fromHex"]},{"name":"fun String.toHex(): String","description":"xyz.malefic.compose.ext.standard.string.toHex","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.string/to-hex.html","searchKeys":["toHex","fun String.toHex(): String","xyz.malefic.compose.ext.standard.string.toHex"]},{"name":"fun filter(predicate: (T) -> Boolean): TreeNode<T>?","description":"xyz.malefic.compose.ext.standard.tree.TreeNode.filter","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.tree/-tree-node/filter.html","searchKeys":["filter","fun filter(predicate: (T) -> Boolean): TreeNode<T>?","xyz.malefic.compose.ext.standard.tree.TreeNode.filter"]},{"name":"fun flattenTree(depth: Int = 0): List<Pair<T, Int>>","description":"xyz.malefic.compose.ext.standard.tree.TreeNode.flattenTree","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.tree/-tree-node/flatten-tree.html","searchKeys":["flattenTree","fun flattenTree(depth: Int = 0): List<Pair<T, Int>>","xyz.malefic.compose.ext.standard.tree.TreeNode.flattenTree"]},{"name":"infix fun Navigator.gate(route: String)","description":"xyz.malefic.compose.ext.precompose.gate","location":"-malefic-extensions/xyz.malefic.compose.ext.precompose/gate.html","searchKeys":["gate","infix fun Navigator.gate(route: String)","xyz.malefic.compose.ext.precompose.gate"]},{"name":"infix suspend fun LazyListState.scroll(index: Int)","description":"xyz.malefic.compose.ext.composables.scroll","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/scroll.html","searchKeys":["scroll","infix suspend fun LazyListState.scroll(index: Int)","xyz.malefic.compose.ext.composables.scroll"]},{"name":"inline operator fun <T> List<T?>.get(index: Int, default: T): T","description":"xyz.malefic.compose.ext.standard.get","location":"-malefic-extensions/xyz.malefic.compose.ext.standard/get.html","searchKeys":["get","inline operator fun <T> List<T?>.get(index: Int, default: T): T","xyz.malefic.compose.ext.standard.get"]},{"name":"open override fun toString(): String","description":"xyz.malefic.compose.ext.standard.tree.TreeNode.toString","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.tree/-tree-node/to-string.html","searchKeys":["toString","open override fun toString(): String","xyz.malefic.compose.ext.standard.tree.TreeNode.toString"]},{"name":"suspend fun LazyListState.scrollToTop()","description":"xyz.malefic.compose.ext.composables.scrollToTop","location":"-malefic-extensions/xyz.malefic.compose.ext.composables/scroll-to-top.html","searchKeys":["scrollToTop","suspend fun LazyListState.scrollToTop()","xyz.malefic.compose.ext.composables.scrollToTop"]},{"name":"val children: List<TreeNode<T>>","description":"xyz.malefic.compose.ext.standard.tree.TreeNode.children","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.tree/-tree-node/children.html","searchKeys":["children","val children: List<TreeNode<T>>","xyz.malefic.compose.ext.standard.tree.TreeNode.children"]},{"name":"val value: T","description":"xyz.malefic.compose.ext.standard.tree.TreeNode.value","location":"-malefic-extensions/xyz.malefic.compose.ext.standard.tree/-tree-node/value.html","searchKeys":["value","val value: T","xyz.malefic.compose.ext.standard.tree.TreeNode.value"]}]